---
// Dependencies
import { getCollection, render } from 'astro:content';

// Services
import ImageService from '~/services/ImageService';

// Layout
import Layout from '~/layouts/Layout.astro';

//Sections
import Main from '~/section/Main.astro';

// Atoms
import Button from '~/atoms/Button.astro';

export async function getStaticPaths() {
  const posts = await getCollection('culture');
  return posts.map((post) => {
    const [category, slug] = post.slug.split('/');

    return {
      params: { id: slug, category },
      props: { post },
    };
  });
}

const { post } = Astro.props;
const { body } = post;

const imageList = ImageService.parseImageList(body);
---

<Layout asideScroll={true}>
  <Main class="flex-row gap-4">
    <div class="bg-theme-black relative min-h-full min-w-1/2">
      <Button
        href="/culture"
        class="absolute top-0 right-0 z-10"
        id="backButton"
      >
        [Back]
      </Button>
      <img
        src={post.data.mainImage}
        class="z-0 min-h-full w-full min-w-full object-cover opacity-50"
        transition:name={`culture-image-${post.slug}`}
        id="lookbook-main-image"
      />
    </div>
    <article
      class="hidden-scrollbar w-full overflow-auto p-0"
      id="scroll-section"
    >
      <h1 class="font-oswald text-8xl">
        {post.data.title}
      </h1>
      <h2 class="font-oswald text-5xl">{post.data.subtitle}</h2>
      <p class="text-theme-main mb-8">[{post.data.date}]</p>
      <div id="content-wrapper">
        {
          imageList.map((image) => {
            const { url, slug, alt } = image;

            return (
              <img
                src={url}
                id={slug}
                alt={alt}
                data-item-image
                class="cursor-pointer"
              />
            );
          })
        }
      </div>
    </article>
  </Main>
</Layout>

<style>
  article {
    h3 {
      color: var(--color-theme-main);
      font-size: calc(var(--spacing) * 6);
      font-weight: bold;
    }

    h4 {
      em {
        color: var(--color-gray-700);
        font-size: calc(var(--spacing) * 6);
      }
    }

    #content-wrapper {
      display: grid;
      grid-template-columns: repeat(
        auto-fit,
        minmax(calc(var(--spacing) * 70), 1fr)
      );
      gap: calc(var(--spacing) * 4);
      img {
        aspect-ratio: 1;
        width: 100%;
        object-fit: cover;
      }
    }
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    const history = window.history;
    const backButton = document.getElementById('backButton');

    backButton?.addEventListener('click', (event) => {
      history.back();
    });
  });
</script>

<script is:inline>
  document.addEventListener('astro:page-load', () => {
    const mainImage = document.getElementById('lookbook-main-image');

    if (!mainImage) throw new Error("Couldn't find the main image of the page");

    const images = document.querySelectorAll('img[data-item-image]');

    if (!images) throw new Error("Couldn't find any images on the page");

    images.forEach((image) => {
      image.addEventListener('click', (event) => {
        const img = event.currentTarget;
        mainImage.src = img.src;
      });
    });
  });
</script>
